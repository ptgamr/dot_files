,V
[global_config]  title_transmit_bg_color = "#d30102"  focus = system  inactive_color_offset = 1.0[keybindings][profiles]  [[default]]    palette = "#073642:#dc322f:#859900:#b58900:#268bd2:#d33682:#2aa198:#eee8d5:#002b36:#cb4b16:#586e75:#657b83:#839496:#6c71c4:#93a1a1:#fdf6e3"    font = DejaVu Sans Mono for Powerline 10    background_image = None    cursor_color = "#c0c5ce"    foreground_color = "#e2e5ea"    show_titlebar = False    copy_on_selection = True    background_color = "#2b303b"    allow_bold = False  [[solarized-dark]]    palette = "#073642:#dc322f:#859900:#b58900:#268bd2:#d33682:#2aa198:#eee8d5:#002b36:#cb4b16:#586e75:#657b83:#839496:#6c71c4:#93a1a1:#fdf6e3"    background_image = None    cursor_color = "#eee8d5"    foreground_color = "#839496"    show_titlebar = False    background_color = "#002b36"  [[ocean]]    background_image = None  [[solarized-light]]    palette = "#2b303b:#bf616a:#a3be8c:#ebcb8b:#8fa1b3:#b48ead:#96b5b4:#c0c5ce:#65737e:#bf616a:#a3be8c:#ebcb8b:#8fa1b3:#b48ead:#96b5b4:#eff1f5"    background_image = None    cursor_color = "#c0c5ce"    foreground_color = "#c0c5ce"    show_titlebar = False    copy_on_selection = True    background_color = "#2b303b"    allow_bold = False[layouts]  [[default]]    [[[child1]]]      type = Terminal      parent = window0      profile = default    [[[window0]]]      type = Window      parent = ""      profile = default[plugins],V
[global_config]  title_transmit_bg_color = "#d30102"  focus = system  inactive_color_offset = 1.0[keybindings][profiles]  [[default]]    palette = "#073642:#dc322f:#859900:#b58900:#268bd2:#d33682:#2aa198:#eee8d5:#002b36:#cb4b16:#586e75:#657b83:#839496:#6c71c4:#93a1a1:#fdf6e3"    font = DejaVu Sans Mono for Powerline 10    background_image = None    cursor_color = "#c0c5ce"    foreground_color = "#e2e5ea"    show_titlebar = False    copy_on_selection = True    background_color = "#2b303b"    allow_bold = False  [[solarized-dark]]    palette = "#073642:#dc322f:#859900:#b58900:#268bd2:#d33682:#2aa198:#eee8d5:#002b36:#cb4b16:#586e75:#657b83:#839496:#6c71c4:#93a1a1:#fdf6e3"    background_image = None    cursor_color = "#eee8d5"    foreground_color = "#839496"    show_titlebar = False    background_color = "#002b36"  [[ocean]]    background_image = None  [[solarized-light]]    palette = "#2b303b:#bf616a:#a3be8c:#ebcb8b:#8fa1b3:#b48ead:#96b5b4:#c0c5ce:#65737e:#bf616a:#a3be8c:#ebcb8b:#8fa1b3:#b48ead:#96b5b4:#eff1f5"    background_image = None    cursor_color = "#c0c5ce"    foreground_color = "#c0c5ce"    show_titlebar = False    copy_on_selection = True    background_color = "#2b303b"    allow_bold = False[layouts]  [[default]]    [[[child1]]]      type = Terminal      parent = window0      profile = default    [[[window0]]]      type = Window      parent = ""      profile = default[plugins],V
    allow_bold = False,V
    background_color = "#001a20",V
    copy_on_selection = True,V
    foreground_color = "#c9dee1",V
    cursor_color = "#c0c5ce",V
    use_system_font = False,V
    background_image = None,V
    palette = "#073642:#dc322f:#859900:#b58900:#268bd2:#d33682:#2aa198:#eee8d5:#002b36:#cb4b16:#2fb0db:#4faacc:#b0eef6:#6c71c4:#93a1a1:#fdf6e3",V
s,v
  renderTemplate: function() {    this.render('actions.voting-places.calculate-vp-structures', {      into: 'application'    });  },,V
  defaultElectorate: Ember.computed.alias('appData.defaultElectorate'),,V
  appData: Ember.inject.service(),,V
  isRenumberingAllElectorate: false,,V
  isRenumberingElectorate: false,,V
  isEdVotingPlace: true,,V
import Ember from 'ember';export default Ember.Controller.extend({  needs: ['breadcrumbs'],  appData: Ember.inject.service(),  defaultElectorate: Ember.computed.alias('appData.defaultElectorate'),  isEdVotingPlace: true,  isRenumberingElectorate: false,  isRenumberingAllElectorate: false,  /**   * Calls the back end service for re-numbering issuing points.in AV or ED   * voting places (depending on the value of the isEdVotingPlace property).   * If an electorate is given, then only issuing points in that electorate   * are renumbered.   * If no electorate is given, then all electorate's issuing points are   * renumbered.   */  renumberIssuingPoints(electorate) {    let busyFlag = electorate ? 'isRenumberingElectorate' : 'isRenumberingAllElectorate';    this.toggleProperty(busyFlag);    let isEd = this.get('isEdVotingPlace');    let params = {      all_electorates: !electorate,      is_ed:           isEd    };    if (electorate) {      params.electorate_id = electorate.get('id');    }    return this.emsAjax.post('actions/renumber_vp_ip', params)      .then(() => {        if (isEd) {          this.store.unloadAll('issuing-point');        } else {          this.store.unloadAll('avp-issuing-point');        }        this.toggleProperty(busyFlag);      })      .catch(e => {        this.toggleProperty(busyFlag);        let errorMessage;        if (e.jqXHR && e.jqXHR.status === 400) {          let errors = e.jqXHR.responseJSON.errors;          errorMessage = errors[0].description;        } else if (e.jqXHR && e.jqXHR.status >= 500) {          errorMessage = 'Server Error';        } else {          errorMessage = 'Unknown Error';          Ember.Logger.error("Error renumbering issuing points:", e);        }        this.send('openModal', 'modals.error', {          message: errorMessage,          title: 'Failed to renumber issuing points'        });      });  },  actions: {    renumberElectorateConfirm() {      var self = this;      var vpType = this.get('isEdVotingPlace') ? 'Election Day' : 'Advance';      this.send('openModal', 'modals.confirm', {        message: `Renumber all ${vpType} Voting issuing points for ${this.get('defaultElectorate.name')}? This should not be done if supplies have been allocated to ${vpType} issuing points. `,        title: 'Confirmation',        approveCallback: function () {          self.renumberIssuingPoints(self.get('defaultElectorate'));        },        denyCallback: function() {          /* do nothing */        }      });    },    renumberAllElectorateConfirm() {      var self = this;      var vpType = this.get('isEdVotingPlace') ? 'Election Day' : 'Advance';      this.send('openModal', 'modals.confirm', {        message: `Renumber all ${vpType} Voting issuing points for all electorates? This should not be done if supplies have been allocated to ${vpType} issuing points. `,        title: 'Confirmation',        approveCallback: function () {          self.renumberIssuingPoints();        },        denyCallback: function() {          /* do nothing */        }      });    }  }});,V
  <p>WARNING: This function will recreate all structures in the electorate and current settings will be removed</p>,V
  </p>,V
    <button {{action 'recalcElectorateVpStructConfirm' controllers.application.defaultElectorate}}      class="ui primary button {{if isRecalculatingVpStruct 'loading'}}">      Calculate {{controllers.application.defaultElectorate.name}}    </button>  </p>  <p>    <button {{action 'recalcElectorateVpStructAllConfirm'}}      class="ui primary button {{if isRecalculatingAllVpStruct 'loading'}}">      Calculate for all Electorates    </button>,V
  <p>,V
<div class="row">  {{view "breadcrumbs" class="sixteen wide column"}}</div><div class="ui center aligned segment padded">  <p>    <button {{action 'recalcElectorateVpStructConfirm' controllers.application.defaultElectorate}}      class="ui primary button {{if isRecalculatingVpStruct 'loading'}}">      Calculate {{controllers.application.defaultElectorate.name}}    </button>  </p>  <p>    <button {{action 'recalcElectorateVpStructAllConfirm'}}      class="ui primary button {{if isRecalculatingAllVpStruct 'loading'}}">      Calculate for all Electorates    </button>  </p>  <p>WARNING: This function will recreate all structures in the electorate and current settings will be removed</p></div>,V
},v
Place,v
 ,v
Calculate Voting,v
Structures,v
  {{#link-to 'actions.admin.extract-easyvote' class="item" id="extract-easyvote"}}Calculate Voting Place Structures{{/link-to}},v
Perform the structure calculation for the current electorate or for all electorates,v
<h4 class="ui header link">  {{#link-to 'actions.voting-places.renumber-av-issuing-points'      class="item" id="link-renumber-av-issuing-points"}}Renumber Advance issuing points{{/link-to}}</h4><p>Renumber Advance issuing points</p><h4 class="ui header link">  {{#link-to 'actions.voting-places.renumber-ed-issuing-points'      class="item" id="link-renumber-ed-issuing-points"}}Renumber Election Day issuing points{{/link-to}}</h4><p>Renumber Election Day issuing points</p><h4 class="ui header link">  {{#link-to 'actions.voting-places.renumber-voting-places'      class="item" id="link-renumber-voting-places"}}Maintain Voting Place Numbers{{/link-to}}</h4><p>Maintain Voting Place Numbers</p>,V
<h4 class="ui header link">  {{#link-to 'actions.voting-places.calculate-vp-structures' class="item" id="calculate-vp-structures"}}Calculate Voting Place Structures{{/link-to}}</h4><p>Perform the structure calculation for the current electorate or for all electorates</p><h4 class="ui header link">  {{#link-to 'actions.voting-places.renumber-av-issuing-points'      class="item" id="link-renumber-av-issuing-points"}}Renumber Advance issuing points{{/link-to}}</h4><p>Renumber Advance issuing points</p><h4 class="ui header link">  {{#link-to 'actions.voting-places.renumber-ed-issuing-points'      class="item" id="link-renumber-ed-issuing-points"}}Renumber Election Day issuing points{{/link-to}}</h4><p>Renumber Election Day issuing points</p><h4 class="ui header link">  {{#link-to 'actions.voting-places.renumber-voting-places'      class="item" id="link-renumber-voting-places"}}Maintain Voting Place Numbers{{/link-to}}</h4><p>Maintain Voting Place Numbers</p>,V
  },V
  setupController: function(controller) {,V
    controller.set('isEdVotingPlace', false);,V
  },,V
    });,V
      into: 'application',V
    this.render(this.get('templateName'), {,V
  renderTemplate: function() {,V
  controllerName: 'actions.voting-places.renumber-issuing-points',  templateName: 'actions.voting-places.renumber-issuing-points',,V
Renumber Advance Issuing Points,v
import Ember from 'ember';import AuthenticatedRouteMixin from 'simple-auth/mixins/authenticated-route-mixin';export default Ember.Route.extend(AuthenticatedRouteMixin, {  breadcrumbName: 'Renumber Advance Issuing Points',  controllerName: 'actions.voting-places.renumber-issuing-points',  templateName: 'actions.voting-places.renumber-issuing-points',  renderTemplate: function() {    this.render(this.get('templateName'), {      into: 'application'    });  },  setupController: function(controller) {    controller.set('isEdVotingPlace', false);  }});,V
Voting Places,v
import Ember from 'ember';export default Ember.Controller.extend({  needs: [    'application'  ]});,V
let g:NERDTreeWinPos = "right",v
foldlevelstart=99,V
setl foldlevelstart=999,V
f,v
",v
 ~/.vim_runtime/my_configs.vim,v
